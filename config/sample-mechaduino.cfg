# This file provides examples for using a Mechaduino (and similar)
# servo steppers. The snippets in this file may be copied into the
# main printer.cfg file.

# MECHADUINO SUPPORT IS EXPERIMENTAL - PROCEED WITH CAUTION!


#
# Mechaduino snippet
#

# Each mechaduino has its own mcu definition. (When building the
# firmware, compile for the SAMD21 micro-controller.)
[mcu mechaduino_x]
serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00

# It is necessary to define a "stepper_x" section with homing parameters
[stepper_x]
endstop_pin: ^!mechaduino_x:PA2
position_endstop: 0
position_min: 0
position_max: 200
homing_speed: 50

# The mechaduino section defines the "servo stepper". To use this
# feature, define a config section with a "mechaduino" prefix followed
# by the name of the corresponding stepper config section (for
# example, "[mechaduino stepper_x]").
[mechaduino stepper_x]
current: 0.250
#   The maximum amount of current (in amps) to configure the driver to
#   use during stepper movement. This parameter must be provided.
step_distance: 0.2
#   Distance in mm that each full step causes the axis to travel. This
#   parameter must be provided.
sense_resistor: 0.15
in1_pin: mechaduino_x:PA6
in2_pin: mechaduino_x:PA21
in3_pin: mechaduino_x:PA15
in4_pin: mechaduino_x:PA20
vref12_pin: mechaduino_x:PA7
vref34_pin: mechaduino_x:PA8
sensor_pin: mechaduino_x:PB9
sensor_type: as5047d
#   The above are the pin definitions for the mechaduino. They must be
#   provided.


#
# "smart stepper" snippet
#

[mcu smartstepper_y]
serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00

[stepper_y]
endstop_pin: ^!smartstepper_y:PA9
position_endstop: 0
position_min: 0
position_max: 200
homing_speed: 50

[mechaduino stepper_y]
current: 0.250
step_distance: 0.2

sense_resistor: 0.1
in1_pin: smartstepper_y:PA5
in2_pin: smartstepper_y:PA21
in3_pin: smartstepper_y:PA15
in4_pin: smartstepper_y:PA20
vref12_pin: smartstepper_y:PA7
vref34_pin: smartstepper_y:PA8
sensor_pin: smartstepper_y:PB9
sensor_type: as5047d
#   The above are the pin definitions for the "smart stepper". They
#   must be provided.


#
# "servo42" snippet
#

[mcu servo42_z]
serial: /dev/serial/by-id/usb-Klipper_Klipper_firmware_12345-if00

[stepper_z]
endstop_pin: ^!servo42_z:PA31 # Pin on "icsp" header, furthest from usb plug
position_endstop: 0
position_min: 0
position_max: 200
homing_speed: 50

[mechaduino stepper_z]
current: 0.250
step_distance: 0.2

sense_resistor: 0.1
in1_pin: servo42_z:PA5
in2_pin: servo42_z:PA21
in3_pin: servo42_z:PA15
in4_pin: servo42_z:PA20
vref12_pin: servo42_z:PA7
vref34_pin: servo42_z:PA8
sensor_pin: servo42_z:PB9
sensor_type: a1333
#   The above are the pin definitions for the "servo42". They must be
#   provided.


#
# i2c display on "smart stepper" (and clones)
#

#[display]
#lcd_type: ssd1306
#click_pin: ^PA2
#down_pin: ^PB8
#up_pin: ^PB2
